# CircleCI 2.0 configuration file

version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/node:10.19.0
      - image: selenium/standalone-chrome:3.11.0

    working_directory: ~/repo

    steps:
      - checkout
      - setup_remote_docker
      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: npm install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      - run:
          name: create docker network
          command: docker network create grid

      - run:
          name: install selenium-hub
          command: docker run -d --rm -p 4444:4444 --net grid --name selenium-hub selenium/hub:3.11.0

      - run:
          name: install selenium-node
          command: docker run -d --rm --net grid -e HUB_HOST=selenium-hub -v /dev/shm:/dev/shm selenium/node-chrome:3.11.0

      - run:
          name: install-npm
          command: npm install
      # run tests!
      - run:
          name: run ui tests
          command: npm test

      - store_artifacts:
          path: reports/ui-test-report.html
          destination: ui-test-report

      - store_artifacts:
          path: /tmp/artifacts    

    
  ui-test:
    docker:
      - image: circleci/node:10.19.0
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: ui-test
          command: echo 'npm run ci-ui-test'
  deploy:
    docker:
      - image: circleci/node:10.19.0
    steps:
      - checkout
      - run:
          name: Deploy
          command: echo 'Delpoys'
  reports:
    docker:
      - image: circleci/node:10.19.0
    steps:
      - checkout
      - run:
          name: Test-Reports
          command: echo 'Test- Reports'
workflows:
  version: 2
  test-pipeline:
    jobs:
      - build
      - ui-test:
          requires:
            - build
      - deploy:
          requires:
            - ui-test
      - reports:
          requires:
            - ui-test
